% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rr_causal_forest.R
\name{rr_causal_forest}
\alias{rr_causal_forest}
\title{Causal forest}
\usage{
rr_causal_forest(
  X,
  Y,
  W,
  rct = TRUE,
  num.trees = 2000,
  sample.fraction = 0.5,
  mtry = min(ceiling(sqrt(ncol(X)) + 20), ncol(X)),
  min.node.size = 5,
  honesty = TRUE,
  honesty.fraction = 0.5,
  honesty.prune.leaves = TRUE,
  stabilize.splits = TRUE,
  num.threads = NULL,
  seed = runif(1, 0, .Machine$integer.max)
)
}
\arguments{
\item{X}{The covariates used in the causal regression.}

\item{Y}{The outcome (must be a binary numeric vector with no NAs).}

\item{W}{The treatment assignment (must be a binary numeric vector with no NAs).}

\item{rct}{Whether the data come from an RCT (meaning propensity score adjustment is not needed).
If FALSE, propensities E[W | Xi] are estimated using a separate regression forest. Default is TRUE.}

\item{num.trees}{Number of trees grown in the forest. Default is 2000.}

\item{sample.fraction}{Fraction of the data used to build each tree.
Note: If honesty = TRUE, these subsamples will
further be cut by a factor of honesty.fraction. Default is 0.5.}

\item{mtry}{Number of variables tried for each split. Default is
\eqn{\sqrt p + 20} where p is the number of variables.}

\item{min.node.size}{A target for the minimum number of observations in each tree leaf. Note that nodes
with size smaller than min.node.size can occur, as in the original randomForest package.
Default is 5.}

\item{honesty}{Whether to use honest splitting (i.e., sub-sample splitting). Default is TRUE.}

\item{honesty.fraction}{The fraction of data that will be used for determining splits if honesty = TRUE. Corresponds
to set J1 in the notation of the paper. Default is 0.5 (i.e. half of the data is used for
determining splits).}

\item{honesty.prune.leaves}{If TRUE, prunes the estimation sample tree such that no leaves
are empty. If FALSE, keep the same tree as determined in the splits sample (if an empty leave is encountered, that
tree is skipped and does not contribute to the estimate). Setting this to FALSE may improve performance on
small/marginally powered data, but requires more trees. Only applies if honesty is enabled. Default is TRUE.}

\item{stabilize.splits}{Whether or not the treatment should be taken into account when
determining the imbalance of a split. Default is TRUE.}

\item{num.threads}{Number of threads used in training. By default, the number of threads is set
to the maximum hardware concurrency.}

\item{seed}{The seed of the C++ random number generator.}

\item{alpha}{A tuning parameter that controls the maximum imbalance of a split. Default is 0.05.}
}
\value{
A trained causal forest object. If tune.parameters is enabled,
 then tuning information will be included through the `tuning.output` attribute.
}
\description{
Trains a relative risk causal forest that can be used to estimate
relative conditional average treatment effects tau(X). When
the treatment assignment W is binary and unconfounded, we have
tau(X) = E[Y(1) | X = x] / E[Y(0) | X = x], where Y(0) and Y(1) are
potential outcomes corresponding to the two possible treatment states.
}
